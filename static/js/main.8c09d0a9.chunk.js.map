{"version":3,"sources":["components/field/squer.tsx","App.tsx","reportWebVitals.ts","index.tsx","components/field/field.module.scss"],"names":["Squer","x","y","openHandler","id","open","bomb","bombNumber","type","className","style","squer","squerOpen","top","left","onClick","squerBomb","example","firstCircel","secondCircle","bombPlaces","App","useState","fieldSquers","setFieldSquers","mesage","setMesage","bombCount","setBombCount","checkNextOpenZeroStep","chekNextZeros2","chekNextZeros","filter","item","map","item2","item3","i","l","callCheckNext","openFieldSquers","youLose","checkIfZero","winLength","length","console","log","winField","checkWin","loseOpenAll","bombCounter","bombLength","useEffect","newFieldSquers","generate","j","uuidv4","push","draw","start","bombField","num","Math","floor","random","num2","putBombs","bombNumberField","putBombNumbers","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.8c09d0a9.chunk.js","sourcesContent":["/* eslint-disable jsx-a11y/control-has-associated-label */\r\nimport React from 'react';\r\nimport style from './field.module.scss';\r\n\r\ntype Props = {\r\n  x: number;\r\n  y: number;\r\n  id: string;\r\n  open: boolean;\r\n  bomb: boolean;\r\n  openHandler: (x: number, y: number) => void;\r\n  bombNumber: number;\r\n};\r\n\r\nexport const Squer = ({ x, y, id, openHandler, open, bomb, bombNumber }: Props) => {\r\n\r\n  return (\r\n    <>\r\n      {!open ?\r\n        <button\r\n          type='button'\r\n          className={style.squer}\r\n          style={{ top: `${y}%`, left: `${x}%` }}\r\n          onClick={() => openHandler(x, y)}\r\n        />\r\n        :\r\n        <button\r\n          type='button'\r\n          className={`${style.squer} ${style.squerOpen}`}\r\n          style={{ top: `${y}%`, left: `${x}%` }}\r\n          onClick={() => openHandler(x, y)}\r\n        >{bombNumber}\r\n        </button>}\r\n      {bomb && open &&\r\n        <button\r\n          type='button'\r\n          className={`${style.squer} ${style.squerBomb}`}\r\n          style={{ top: `${y}%`, left: `${x}%` }}\r\n          onClick={() => openHandler(x, y)}\r\n        />}\r\n\r\n\r\n    </>\r\n\r\n  );\r\n};","/* eslint-disable no-param-reassign */\r\nimport React, { useState, useEffect } from 'react';\r\nimport './App.css';\r\nimport 'flexboxgrid';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { Squer } from './components/field/squer';\r\n\r\nconst example = { id: '1', x: 0, y: 1, open: false, firstCircel: false, secondCircle: false, bomb: false, bombNumber: 0 };\r\nconst bombPlaces: Array<Array<number>> = [[]];\r\n\r\nconst App = () => {\r\n\r\n  const [fieldSquers, setFieldSquers] = useState([\r\n    example\r\n  ]);\r\n  const [mesage, setMesage] = useState('');\r\n  const [bombCount, setBombCount] = useState(0);\r\n\r\n  const checkWin = () => {\r\n    const winLength = fieldSquers.length - bombPlaces.length;\r\n    console.log('Test win');\r\n    const winField = fieldSquers.filter(item => item.open === true);\r\n    console.log('Now', winField.length, 'Should', winLength - 1);\r\n    if (winField.length === winLength) {\r\n      setMesage('You Win!');\r\n    }\r\n  };\r\n  const checkIfZero = (x: number, y: number) => {\r\n    const chekZeros = [...fieldSquers];\r\n    chekZeros.map((item) => {\r\n      for (let i = -1; i < 2; i++) {\r\n        for (let l = -1; l < 2; l++) {\r\n          if (item.x === x + 10 * i && item.y === y + 10 * l\r\n            && item.bomb === false) {\r\n            item.open = true;\r\n          }\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  const checkNextOpenZeroStep = () => {\r\n    const chekNextZeros2 = [...fieldSquers];\r\n    const chekNextZeros = fieldSquers.filter(item => item.bombNumber === 0 && item.open === true);\r\n    fieldSquers.map((item2) => {\r\n      chekNextZeros.map((item3) => {\r\n        for (let i = -1; i < 2; i++) {\r\n          for (let l = -1; l < 2; l++) {\r\n            if (item2.x === item3.x + 10 * i && item2.y === item3.y + 10 * l && item2.bomb === false) {\r\n              item2.open = true;\r\n              setFieldSquers(chekNextZeros2);\r\n            }\r\n          }\r\n        }\r\n      });\r\n    });\r\n  };\r\n  const callCheckNext = () => {\r\n    for (let i = 0; i < 10; i++) {\r\n      checkNextOpenZeroStep();\r\n    }\r\n  };\r\n  const openHandler = (x: number, y: number) => {\r\n    const openFieldSquers = [...fieldSquers];\r\n    openFieldSquers.map((item) => {\r\n      if (item.x === x && item.y === y) {\r\n\r\n        item.open = true;\r\n        if (item.bomb) {\r\n          youLose();\r\n        }\r\n        if (item.bombNumber === 0) {\r\n          checkIfZero(x, y);\r\n        }\r\n      }\r\n    });\r\n    setFieldSquers(openFieldSquers);\r\n    callCheckNext();\r\n    checkWin();\r\n  };\r\n\r\n  const youLose = () => {\r\n    setMesage('You Loese');\r\n    const loseOpenAll = [...fieldSquers];\r\n    loseOpenAll.map((item) => {\r\n      item.open = true;\r\n      setFieldSquers(loseOpenAll);\r\n    });\r\n  };\r\n\r\n  const draw = () => {\r\n    const newFieldSquers = [...fieldSquers];\r\n    let generate = example;\r\n    for (let j = 0; j <= 9; j++) {\r\n      for (let i = 0; i <= 9; i++) {\r\n        const setId = uuidv4();\r\n        generate = {\r\n          id: setId, x: i * 10, y: j * 10, open: false, bomb: false,\r\n          firstCircel: false, secondCircle: false, bombNumber: 0\r\n        };\r\n        newFieldSquers.push(generate);\r\n        setFieldSquers(newFieldSquers);\r\n      }\r\n    }\r\n  };\r\n\r\n  const putBombs = () => {\r\n    const bombField = [...fieldSquers];\r\n    bombField.map((item) => {\r\n      for (let i = 0; i < 11; i++) {\r\n        const num = Math.floor(Math.random() * 11);\r\n        const num2 = Math.floor(Math.random() * 11);\r\n        if (item.x / 10 === num && item.y / 10 === num2) {\r\n          bombPlaces.push([item.x, item.y]);\r\n          item.bomb = true;\r\n        }\r\n      }\r\n    });\r\n    setFieldSquers(bombField);\r\n    bombCounter();\r\n  };\r\n\r\n  const bombCounter = () => {\r\n    const bombLength = fieldSquers.filter(item => item.bomb === true);\r\n    setBombCount(bombLength.length);\r\n  };\r\n\r\n  const putBombNumbers = () => {\r\n    const bombNumberField = [...fieldSquers];\r\n    fieldSquers.map((item) => {\r\n      for (let j = 0; j < bombPlaces.length; j++) {\r\n        for (let i = -1; i < 2; i++) {\r\n          for (let l = -1; l < 2; l++) {\r\n            if (item.x === bombPlaces[j][0] + 10 * i &&\r\n              item.y === bombPlaces[j][1] + -10 * l) {\r\n              item.bombNumber += 1;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    });\r\n    setFieldSquers(bombNumberField);\r\n  };\r\n\r\n  useEffect(() => {\r\n    draw();\r\n  }, []);\r\n\r\n  const start = () => {\r\n    putBombs();\r\n    putBombNumbers();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-xs-offset-3 col-xs-6\">\r\n            <button type=\"button\" onClick={() => start()}>Start</button>\r\n            <button type=\"button\" onClick={() => callCheckNext()}>Test</button>\r\n            <h2>{mesage}</h2>\r\n            <h2>{bombCount}</h2>\r\n            <div className=\"game--grid\">\r\n              {fieldSquers.map((item) =>\r\n                <div key={item.id}>\r\n                  <Squer\r\n                    x={item.x}\r\n                    y={item.y}\r\n                    id={item.id}\r\n                    openHandler={(x, y) =>\r\n                      openHandler(item.x, item.y)}\r\n                    open={item.open}\r\n                    bomb={item.bomb}\r\n                    bombNumber={item.bombNumber}\r\n                  />\r\n                </div>)}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"squer\":\"field_squer__362V1\",\"squerOpen\":\"field_squerOpen__2t6UD\",\"squerBomb\":\"field_squerBomb__1EsGs\"};"],"sourceRoot":""}