{"version":3,"sources":["components/field/squer.tsx","App.tsx","reportWebVitals.ts","index.tsx","components/field/field.module.scss"],"names":["Squer","x","y","openHandler","id","open","bomb","bombNumber","type","className","style","squer","squerOpen","top","left","onClick","squerBomb","example","firstCircel","secondCircle","bombPlaces","App","useState","fieldSquers","setFieldSquers","mesage","setMesage","useEffect","newFieldSquers","generate","j","i","uuidv4","push","draw","start","bombField","map","item","putBombs","bombNumberField","length","l","putBombNumbers","openFieldSquers","console","log","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.b08acb15.chunk.js","sourcesContent":["/* eslint-disable jsx-a11y/control-has-associated-label */\r\nimport React from 'react';\r\nimport style from './field.module.scss';\r\n\r\ntype Props = {\r\n  x: number;\r\n  y: number;\r\n  id: string;\r\n  open: boolean;\r\n  bomb: boolean;\r\n  openHandler: (x: number, y: number) => void;\r\n  bombNumber: number;\r\n};\r\n\r\nexport const Squer = ({ x, y, id, openHandler, open, bomb, bombNumber }: Props) => {\r\n\r\n  return (\r\n    <>\r\n      {!open ?\r\n        <button\r\n          type='button'\r\n          className={style.squer}\r\n          style={{ top: `${y}%`, left: `${x}%` }}\r\n          onClick={() => openHandler(x, y)}\r\n        />\r\n        :\r\n        <button\r\n          type='button'\r\n          className={`${style.squer} ${style.squerOpen}`}\r\n          style={{ top: `${y}%`, left: `${x}%` }}\r\n          onClick={() => openHandler(x, y)}\r\n        >{bombNumber}\r\n        </button>}\r\n      {bomb && open &&\r\n        <button\r\n          type='button'\r\n          className={`${style.squer} ${style.squerBomb}`}\r\n          style={{ top: `${y}%`, left: `${x}%` }}\r\n          onClick={() => openHandler(x, y)}\r\n        />}\r\n\r\n\r\n    </>\r\n\r\n  );\r\n};","/* eslint-disable no-param-reassign */\r\nimport React, { useState, useEffect } from 'react';\r\nimport './App.css';\r\nimport 'flexboxgrid';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { Squer } from './components/field/squer';\r\n\r\nconst example = { id: '1', x: 0, y: 1, open: false, firstCircel: false, secondCircle: false, bomb: false, bombNumber: 0 };\r\nconst bombPlaces: Array<Array<number>> = [[]];\r\n\r\nconst App = () => {\r\n\r\n  const [fieldSquers, setFieldSquers] = useState([\r\n    example\r\n  ]);\r\n  const [mesage, setMesage] = useState('');\r\n  const openHandler = (x: number, y: number) => {\r\n    const openFieldSquers = [...fieldSquers];\r\n    openFieldSquers.map((item) => {\r\n      if (item.x === x && item.y === y) {\r\n        item.open = true;\r\n        if (item.bomb ){\r\n          setMesage('You Loese');\r\n        }\r\n      } \r\n      if (item.bombNumber === 0) {\r\n        console.log('true');\r\n        for (let i = -1; i < 2; i++) {\r\n          for (let l = -1; l < 2; l++) {\r\n            if (item.x === x + 10 * i && item.y === y + 10 * l\r\n              && item.bomb === false) {\r\n              item.open = true;\r\n            }\r\n          } \r\n        }\r\n      }\r\n    });\r\n    setFieldSquers(openFieldSquers);\r\n  };\r\n\r\n  const draw = () => {\r\n    const newFieldSquers = [...fieldSquers];\r\n    let generate = example;\r\n    for (let j = 0; j <= 9; j++) {\r\n      for (let i = 0; i <= 9; i++) {\r\n        const setId = uuidv4();\r\n        generate = {\r\n          id: setId, x: i * 10, y: j * 10, open: false, bomb: false,\r\n          firstCircel: false, secondCircle: false, bombNumber: 0\r\n        };\r\n        newFieldSquers.push(generate);\r\n        setFieldSquers(newFieldSquers);      \r\n      }\r\n    }\r\n  };\r\n\r\n  const putBombs = () => {\r\n    const bombField = [...fieldSquers];\r\n    bombField.map((item) => {\r\n      if (item.x / 10 %2 === 0 && item.y / 10 % 2 === 0) {\r\n        bombPlaces.push([item.x, item.y]);\r\n        item.bomb = true;\r\n      }\r\n    });\r\n    setFieldSquers(bombField);\r\n  };\r\n\r\n  // console.log(bombPlaces);\r\n  const putBombNumbers = () => {\r\n    const bombNumberField = [...fieldSquers];\r\n    fieldSquers.map((item) => {\r\n      for (let j = 0; j < bombPlaces.length; j++) {\r\n        for (let i = -1; i < 2; i++) {\r\n          for (let l = -1; l < 2; l++) {\r\n            if (item.x === bombPlaces[j][0] + 10 * i &&\r\n              item.y === bombPlaces[j][1] + -10 * l) {\r\n              item.bombNumber += 1;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    });\r\n    setFieldSquers(bombNumberField);\r\n  };\r\n\r\n  useEffect(() => {\r\n    draw();\r\n  }, []);\r\n\r\n  const start = () => {\r\n    putBombs();\r\n    putBombNumbers();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-xs-offset-3 col-xs-6\">\r\n            <button type=\"button\" onClick={() => start()}>Start</button>\r\n            <h2>{mesage}</h2>\r\n            <div className=\"game--grid\">\r\n              {fieldSquers.map((item) =>\r\n                <div key={item.id}>\r\n                  <Squer\r\n                    x={item.x}\r\n                    y={item.y}\r\n                    id={item.id}\r\n                    openHandler={(x, y) =>\r\n                      openHandler(item.x, item.y)}\r\n                    open={item.open}\r\n                    bomb={item.bomb}\r\n                    bombNumber={item.bombNumber}\r\n                  />\r\n                </div>)}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"squer\":\"field_squer__362V1\",\"squerOpen\":\"field_squerOpen__2t6UD\",\"squerBomb\":\"field_squerBomb__1EsGs\"};"],"sourceRoot":""}