{"version":3,"sources":["components/field/squer.tsx","components/buttons/start.tsx","helperFunctions/generateBombs.ts","App.tsx","helperFunctions/generateGrid.ts","reportWebVitals.ts","index.tsx","components/field/field.module.scss","components/buttons/buttons.module.scss"],"names":["Squer","x","y","openHandler","id","open","bomb","bombNumber","numberColor","flag","type","className","style","squer","squerOpen","top","left","color","onClick","squerBomb","squerFlag","Start","labelText","startHandler","hideStart","wrapper","start","GenerateBombs","size","bombArray","num","Math","floor","random","num2","find","item","push","length","App","useState","cells","setCells","setBombPlaces","mesage","setMesage","bombCount","setBombCount","flags","setFlags","launchDraw","setLaunchDraw","setHideStart","useEffect","draw","gridArray","generate","j","i","uuidv4","Grid","bombsRemaining","bombLength","filter","flagLength","checkWin","winLength","winOpenAll","map","checkIfZero","l","checkNextOpenZeroStep","chekNextZeros2","chekNextZeros","item2","item3","callCheckNext","youLose","loseOpenAll","putBombs","bombPlacement","console","log","bombField","bombNumberField","putNumberColor","allNumberColors","opencells","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.ef589074.chunk.js","sourcesContent":["/* eslint-disable jsx-a11y/control-has-associated-label */\r\nimport React from 'react';\r\nimport style from './field.module.scss';\r\n\r\ntype Props = {\r\n  x: number;\r\n  y: number;\r\n  id: string;\r\n  open: boolean;\r\n  bomb: boolean;\r\n  openHandler: (x: number, y: number) => void;\r\n  bombNumber: number;\r\n  numberColor: string;\r\n  flag: boolean;\r\n};\r\n\r\nexport const Squer = ({ x, y, id, openHandler, open, bomb,\r\n  bombNumber, numberColor, flag }: Props) => {\r\n\r\n  return (\r\n    <>\r\n      {!open ?\r\n        <button\r\n          type='button'\r\n          className={style.squer}\r\n          style={{ top: `${y}%`, left: `${x}%` }}\r\n          onClick={() => openHandler(x, y)}\r\n        />\r\n        :\r\n        <button\r\n          type='button'\r\n          className={`${style.squer} ${style.squerOpen}`}\r\n          style={{ top: `${y}%`, left: `${x}%`, color: `${numberColor}` }}\r\n          onClick={() => openHandler(x, y)}\r\n\r\n        >{bombNumber}\r\n        </button>}\r\n      {bomb && open &&\r\n        <button\r\n          type='button'\r\n          className={`${style.squer} ${style.squerBomb}`}\r\n          style={{ top: `${y}%`, left: `${x}%` }}\r\n          onClick={() => openHandler(x, y)}\r\n        >\r\n          <i className=\"fas fa-bomb\" />\r\n        </button>}\r\n      {flag &&\r\n        <button\r\n          type='button'\r\n          className={`${style.squer} ${style.squerFlag}`}\r\n          style={{ top: `${y}%`, left: `${x}%` }}\r\n          onClick={() => openHandler(x, y)}\r\n        >\r\n          <i className=\"fas fa-flag\" />\r\n        </button>}\r\n\r\n\r\n    </>\r\n\r\n  );\r\n};","import React from 'react';\r\nimport style from './buttons.module.scss';\r\n\r\ntype Props = {\r\n  labelText: string;\r\n  startHandler: () => void;\r\n  hideStart: boolean;\r\n};\r\n\r\nexport const Start = ({ labelText, startHandler, hideStart }: Props) => {\r\n\r\n  return (\r\n    <>\r\n      {!hideStart &&\r\n        <div className={style.wrapper}>\r\n          <button\r\n            type='button'\r\n            className={style.start}\r\n            onClick={() => startHandler()}\r\n          >{labelText}\r\n          </button>\r\n        </div>}\r\n    </>\r\n\r\n  );\r\n};","\r\nexport const GenerateBombs = (size: number) => {\r\n\r\n  const bombArray: number[][] = [];\r\n \r\n  while (bombArray.length < size) {\r\n    const num = Math.floor(Math.random() * 10);\r\n    const num2 = Math.floor(Math.random() * 10);\r\n   \r\n    if (!bombArray.find(item => item[0] === num * 10 \r\n      && item[1] === num2 * 10)) {\r\n      bombArray.push([num * 10, num2 * 10]);    \r\n    }\r\n  }\r\n  return bombArray;\r\n};\r\n\r\n","/* eslint-disable no-param-reassign */\r\nimport React, { useState, useEffect } from 'react';\r\nimport './App.css';\r\nimport 'flexboxgrid';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { Squer } from './components/field/squer';\r\nimport { Start } from './components/buttons/start';\r\nimport { Grid } from './helperFunctions/generateGrid';\r\nimport { GenerateBombs } from './helperFunctions/generateBombs';\r\n\r\n\r\n// const example = { id: '1', x: 0, y: 0, open: false, flag: false, bomb: false, bombNumber: 0, color: 'red' };\r\n\r\ntype Cells = {\r\n  id: string\r\n  x: number\r\n  y: number\r\n  open: boolean\r\n  flag: boolean\r\n  bomb: boolean\r\n  bombNumber: number\r\n  color: string\r\n};\r\n\r\nconst App = () => {\r\n\r\n  const [cells, setCells] = useState<Cells[]>([]);\r\n  const [bombPlaces, setBombPlaces] = useState<Array<Array<number>>>([[]]);\r\n  const [mesage, setMesage] = useState('');\r\n  const [bombCount, setBombCount] = useState(0);\r\n  const [flags, setFlags] = useState(false);\r\n  const [launchDraw, setLaunchDraw] = useState(false);\r\n  const [hideStart, setHideStart] = useState(false);\r\n\r\n  useEffect(() => {\r\n    draw();\r\n  }, [launchDraw]);\r\n\r\n  const size = 10;\r\n  const draw = () => {\r\n    setCells(Grid(size));\r\n  };\r\n\r\n  const start = () => {\r\n    putBombs();\r\n    putNumberColor();\r\n    setHideStart(!hideStart);\r\n    bombsRemaining();\r\n  };\r\n\r\n  const reStart = () => {\r\n    let clearField = [...cells];\r\n    clearField = [];\r\n    setCells(clearField);\r\n    setBombPlaces([[]]);\r\n    setLaunchDraw(!launchDraw);\r\n    setHideStart(!hideStart);\r\n  };\r\n\r\n  const flagHandler = () => {\r\n    setFlags(!flags);\r\n  };\r\n\r\n  const bombsRemaining = () => {\r\n    const bombLength = cells.filter(item => item.bomb === true);\r\n    const flagLength = cells.filter(item => item.flag === true);\r\n    setBombCount(bombLength.length - flagLength.length);\r\n  };\r\n\r\n  const openHandler = (x: number, y: number) => {\r\n    const opencells = [...cells];\r\n    opencells.map((item) => {\r\n      if (item.x === x && item.y === y && flags) {\r\n        item.flag = !item.flag;\r\n        item.open = false;\r\n      } else if (item.x === x && item.y === y) {\r\n        item.open = true;\r\n        if (item.bomb) {\r\n          youLose();\r\n        }\r\n        if (item.bombNumber === 0) {\r\n          checkIfZero(x, y);\r\n        }\r\n      }\r\n    });\r\n    setCells(opencells);\r\n    callCheckNext();\r\n    checkWin();\r\n    bombsRemaining();\r\n  };\r\n\r\n  const checkWin = () => {\r\n    const winLength = cells.length - size;\r\n    const winField = cells.filter(item => item.open === true);\r\n    if (winField.length === winLength) {\r\n      setMesage('You Win!');\r\n      const winOpenAll = [...cells];\r\n      winOpenAll.map((item) => {\r\n        item.open = true;\r\n        setCells(winOpenAll);\r\n      });\r\n    }\r\n  };\r\n\r\n  const checkIfZero = (x: number, y: number) => {\r\n    const chekZeros = [...cells];\r\n    chekZeros.map((item) => {\r\n      for (let i = -1; i < 2; i++) {\r\n        for (let l = -1; l < 2; l++) {\r\n          if (item.x === x + 10 * i && item.y === y + 10 * l\r\n            && item.bomb === false) {\r\n            item.open = true;\r\n          }\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  const checkNextOpenZeroStep = () => {\r\n    const chekNextZeros2 = [...cells];\r\n    const chekNextZeros = cells.filter(item => item.bombNumber ===\r\n      0 && item.open === true);\r\n    cells.map((item2) => {\r\n      chekNextZeros.map((item3) => {\r\n        for (let i = -1; i < 2; i++) {\r\n          for (let l = -1; l < 2; l++) {\r\n            if (item2.x === item3.x + 10 * i && item2.y ===\r\n              item3.y + 10 * l && item2.bomb === false) {\r\n              item2.open = true;\r\n              setCells(chekNextZeros2);\r\n            }\r\n          }\r\n        }\r\n      });\r\n    });\r\n  };\r\n\r\n  const callCheckNext = () => {\r\n    if (!flags) {\r\n      for (let i = 0; i < 20; i++) {\r\n        checkNextOpenZeroStep();\r\n      }\r\n    }\r\n  };\r\n\r\n  const youLose = () => {\r\n    setMesage('You Loese');\r\n    const loseOpenAll = [...cells];\r\n    loseOpenAll.map((item) => {\r\n      item.open = true;\r\n      setCells(loseOpenAll);\r\n    });\r\n  };\r\n\r\n  const putBombs = () => {\r\n    const bombPlacement = GenerateBombs(size);\r\n    console.log(GenerateBombs(size));\r\n    const bombField = [...cells];\r\n    bombField.map((item) => {\r\n      for (let i = 0; i < bombPlacement.length; i++) {\r\n        if (item.x === bombPlacement[i][0] && item.y === bombPlacement[i][1]\r\n          && item.bomb === false) {\r\n          item.bomb = true;\r\n        }\r\n      }\r\n    });\r\n    setCells(bombField);\r\n    const bombNumberField = [...cells];\r\n    cells.map((item) => {\r\n      for (let j = 0; j < bombPlacement.length; j++) {\r\n        for (let i = -1; i < 2; i++) {\r\n          for (let l = -1; l < 2; l++) {\r\n            if (item.x === bombPlacement[j][0] + 10 * i &&\r\n              item.y === bombPlacement[j][1] + -10 * l) {\r\n              item.bombNumber += 1;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    });\r\n    setCells(bombNumberField);\r\n  };\r\n\r\n  const putNumberColor = () => {\r\n    const allNumberColors = [...cells];\r\n    cells.map((item) => {\r\n      switch (item.bombNumber) {\r\n        case 0:\r\n          item.color = 'rgb(201, 201, 201, 0)';\r\n          break;\r\n        case 1:\r\n          item.color = 'rgb(0, 4, 212)';\r\n          break;\r\n        case 2:\r\n          item.color = 'rgb(0, 177, 59)';\r\n          break;\r\n        case 3:\r\n          item.color = 'rgb(177, 130, 0)';\r\n          break;\r\n        case 4:\r\n          item.color = 'rgb(0, 142, 177)';\r\n          break;\r\n        case 5:\r\n          item.color = 'rgb(121, 0, 177)';\r\n          break;\r\n        case 6:\r\n          item.color = 'rgb(177, 0, 147)';\r\n          break;\r\n        case 7:\r\n          item.color = 'rgb(177, 0, 0)';\r\n          break;\r\n        case 8:\r\n          item.color = 'rgb(0, 0, 0)';\r\n          break;\r\n      }\r\n      setCells(allNumberColors);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-offset-3 col-md-6 col-xs-12\">\r\n\r\n            <button type=\"button\" onClick={() => flagHandler()}>Flag</button>\r\n            <button type=\"button\" onClick={() => reStart()}>Test</button>\r\n            <h2>{mesage}</h2>\r\n\r\n\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-offset-3 col-md-6 col-xs-12\">\r\n            <div className=\"countingLine\"> <h2>0:00</h2><h2>{bombCount}</h2></div>\r\n            <div className=\"game--grid\">\r\n              <Start\r\n                labelText='Start'\r\n                startHandler={() => start()}\r\n                hideStart={hideStart}\r\n              />\r\n              {cells.map((item) =>\r\n                <div key={item.id}>\r\n                  <Squer\r\n                    x={item.x}\r\n                    y={item.y}\r\n                    id={item.id}\r\n                    openHandler={(x, y) =>\r\n                      openHandler(item.x, item.y)}\r\n                    open={item.open}\r\n                    bomb={item.bomb}\r\n                    bombNumber={item.bombNumber}\r\n                    numberColor={item.color}\r\n                    flag={item.flag}\r\n                  />\r\n                </div>)}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { v4 as uuidv4 } from 'uuid';\r\n\r\nexport const Grid = (size: number) => {\r\n  const example = { id: '1', x: 0, y: 0, open: false, flag: false, bomb: false, bombNumber: 0, color: 'red' };\r\n  const gridArray = [];\r\n  let generate = example;\r\n  for (let j = 0; j <= size-1; j++) {\r\n    for (let i = 0; i <= size-1; i++) {\r\n      const setId = uuidv4();\r\n      generate = {\r\n        id: setId, x: i * 10, y: j * 10, open: false, bomb: false,\r\n        flag: false, bombNumber: 0, color: 'red'\r\n      };\r\n      gridArray.push(generate);\r\n    }\r\n  }\r\n  return gridArray;\r\n};\r\n\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"squer\":\"field_squer__362V1\",\"squerOpen\":\"field_squerOpen__2t6UD\",\"squerBomb\":\"field_squerBomb__1EsGs\",\"squerFlag\":\"field_squerFlag__1NasY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"start\":\"buttons_start__1QSVO\",\"wrapper\":\"buttons_wrapper__JrlH_\"};"],"sourceRoot":""}