{"version":3,"sources":["components/field/squer.tsx","App.tsx","reportWebVitals.ts","index.tsx","components/field/field.module.scss"],"names":["Squer","x","y","openHandler","id","open","bomb","bombNumber","numberColor","type","className","style","squer","squerOpen","top","left","color","onClick","squerBomb","example","firstCircel","secondCircle","bombPlaces","App","useState","fieldSquers","setFieldSquers","mesage","setMesage","bombCount","setBombCount","checkNextOpenZeroStep","chekNextZeros2","chekNextZeros","filter","item","map","item2","item3","i","l","openFieldSquers","youLose","checkIfZero","callCheckNext","winLength","length","console","log","winField","checkWin","loseOpenAll","bombCounter","bombLength","putBombs","bombField","num","Math","floor","random","num2","push","useEffect","newFieldSquers","generate","j","uuidv4","draw","start","bombNumberField","putBombNumbers","putNumberColor","allNumberColors","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.dffecea0.chunk.js","sourcesContent":["/* eslint-disable jsx-a11y/control-has-associated-label */\r\nimport React from 'react';\r\nimport style from './field.module.scss';\r\n\r\ntype Props = {\r\n  x: number;\r\n  y: number;\r\n  id: string;\r\n  open: boolean;\r\n  bomb: boolean;\r\n  openHandler: (x: number, y: number) => void;\r\n  bombNumber: number;\r\n  numberColor: string;\r\n};\r\n\r\nexport const Squer = ({ x, y, id, openHandler, open, bomb, bombNumber, numberColor }: Props) => {\r\n\r\n  return (\r\n    <>\r\n      {!open ?\r\n        <button\r\n          type='button'\r\n          className={style.squer}\r\n          style={{ top: `${y}%`, left: `${x}%` }}\r\n          onClick={() => openHandler(x, y)}\r\n        />\r\n        :\r\n        <button\r\n          type='button'\r\n          className={`${style.squer} ${style.squerOpen}`}\r\n          style={{ top: `${y}%`, left: `${x}%`, color: `${numberColor}` }}\r\n          onClick={() => openHandler(x, y)}\r\n          \r\n        >{bombNumber}\r\n        </button>}\r\n      {bomb && open &&\r\n        <button\r\n          type='button'\r\n          className={`${style.squer} ${style.squerBomb}`}\r\n          style={{ top: `${y}%`, left: `${x}%` }}\r\n          onClick={() => openHandler(x, y)}\r\n        />}\r\n\r\n\r\n    </>\r\n\r\n  );\r\n};","/* eslint-disable no-param-reassign */\r\nimport React, { useState, useEffect } from 'react';\r\nimport './App.css';\r\nimport 'flexboxgrid';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { Squer } from './components/field/squer';\r\n\r\nconst example = { id: '1', x: 0, y: 1, open: false, firstCircel: false, secondCircle: false, bomb: false, bombNumber: 0, color: 'red' };\r\nconst bombPlaces: Array<Array<number>> = [[]];\r\n\r\nconst App = () => {\r\n\r\n  const [fieldSquers, setFieldSquers] = useState([\r\n    example\r\n  ]);\r\n  const [mesage, setMesage] = useState('');\r\n  const [bombCount, setBombCount] = useState(0);\r\n\r\n  const checkWin = () => {\r\n    const winLength = fieldSquers.length - bombPlaces.length;\r\n    console.log('Test win');\r\n    const winField = fieldSquers.filter(item => item.open === true);\r\n    console.log('Now', winField.length, 'Should', winLength - 1);\r\n    if (winField.length === winLength) {\r\n      setMesage('You Win!');\r\n    }\r\n  };\r\n  const checkIfZero = (x: number, y: number) => {\r\n    const chekZeros = [...fieldSquers];\r\n    chekZeros.map((item) => {\r\n      for (let i = -1; i < 2; i++) {\r\n        for (let l = -1; l < 2; l++) {\r\n          if (item.x === x + 10 * i && item.y === y + 10 * l\r\n            && item.bomb === false) {\r\n            item.open = true;\r\n          }\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  const checkNextOpenZeroStep = () => {\r\n    const chekNextZeros2 = [...fieldSquers];\r\n    const chekNextZeros = fieldSquers.filter(item => item.bombNumber === 0 && item.open === true);\r\n    fieldSquers.map((item2) => {\r\n      chekNextZeros.map((item3) => {\r\n        for (let i = -1; i < 2; i++) {\r\n          for (let l = -1; l < 2; l++) {\r\n            if (item2.x === item3.x + 10 * i && item2.y === item3.y + 10 * l && item2.bomb === false) {\r\n              item2.open = true;\r\n              setFieldSquers(chekNextZeros2);\r\n            }\r\n          }\r\n        }\r\n      });\r\n    });\r\n  };\r\n  const callCheckNext = () => {\r\n    for (let i = 0; i < 20; i++) {\r\n      checkNextOpenZeroStep();\r\n    }\r\n  };\r\n  const openHandler = (x: number, y: number) => {\r\n    const openFieldSquers = [...fieldSquers];\r\n    openFieldSquers.map((item) => {\r\n      if (item.x === x && item.y === y) {\r\n\r\n        item.open = true;\r\n        if (item.bomb) {\r\n          youLose();\r\n        }\r\n        if (item.bombNumber === 0) {\r\n          checkIfZero(x, y);\r\n        }\r\n      }\r\n    });\r\n    setFieldSquers(openFieldSquers);\r\n    callCheckNext();\r\n    checkWin();\r\n  };\r\n\r\n  const youLose = () => {\r\n    setMesage('You Loese');\r\n    const loseOpenAll = [...fieldSquers];\r\n    loseOpenAll.map((item) => {\r\n      item.open = true;\r\n      setFieldSquers(loseOpenAll);\r\n    });\r\n  };\r\n\r\n  const draw = () => {\r\n    const newFieldSquers = [...fieldSquers];\r\n    let generate = example;\r\n    for (let j = 0; j <= 9; j++) {\r\n      for (let i = 0; i <= 9; i++) {\r\n        const setId = uuidv4();\r\n        generate = {\r\n          id: setId, x: i * 10, y: j * 10, open: false, bomb: false,\r\n          firstCircel: false, secondCircle: false, bombNumber: 0, color: 'red'\r\n        };\r\n        newFieldSquers.push(generate);\r\n        setFieldSquers(newFieldSquers);\r\n      }\r\n    }\r\n  };\r\n\r\n  const bombCounter = () => {\r\n    const bombLength = fieldSquers.filter(item => item.bomb === true);\r\n    setBombCount(bombLength.length);\r\n    if (bombLength.length < 10) {\r\n      putBombs();\r\n    }\r\n  };\r\n\r\n  const putBombs = () => {\r\n    const bombField = [...fieldSquers];\r\n    for (let i = 0; i < 1; i++) {\r\n      const num = Math.floor(Math.random() * 10);\r\n      const num2 = Math.floor(Math.random() * 10);\r\n\r\n\r\n      bombField.map((item) => {\r\n\r\n        console.log(num, num2);\r\n        if (item.x / 10 === num && item.y / 10 === num2) {\r\n          bombPlaces.push([item.x, item.y]);\r\n          item.bomb = true;\r\n        }\r\n\r\n      });\r\n    }\r\n    setFieldSquers(bombField);\r\n\r\n    bombCounter();\r\n  };\r\n\r\n\r\n\r\n  const putBombNumbers = () => {\r\n    const bombNumberField = [...fieldSquers];\r\n    fieldSquers.map((item) => {\r\n      for (let j = 0; j < bombPlaces.length; j++) {\r\n        for (let i = -1; i < 2; i++) {\r\n          for (let l = -1; l < 2; l++) {\r\n            if (item.x === bombPlaces[j][0] + 10 * i &&\r\n              item.y === bombPlaces[j][1] + -10 * l) {\r\n              item.bombNumber += 1;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    });\r\n    setFieldSquers(bombNumberField);\r\n    console.log(bombNumberField);\r\n  };\r\n\r\n  useEffect(() => {\r\n    draw();\r\n  }, []);\r\n\r\n  const start = () => {\r\n    putBombs();\r\n    putBombNumbers();\r\n    putNumberColor();\r\n\r\n  };\r\n\r\n\r\n  const putNumberColor = () => {\r\n    const allNumberColors = [...fieldSquers]; \r\n    fieldSquers.map((item) => {\r\n      switch (item.bombNumber) {\r\n        case 0:\r\n          item.color = 'rgb(201, 201, 201)';\r\n          break;\r\n        case 1:\r\n          item.color = 'rgb(0, 4, 212)';\r\n          break;\r\n        case 2:\r\n          item.color = 'rgb(0, 177, 59)';\r\n          break;\r\n        case 3:\r\n          item.color = 'rgb(177, 130, 0)';\r\n          break;\r\n        case 4:\r\n          item.color = 'rgb(0, 142, 177)';\r\n          break;\r\n        case 5:\r\n          item.color = 'rgb(121, 0, 177)';\r\n          break;\r\n        case 6:\r\n          item.color = 'rgb(177, 0, 147)';\r\n          break;\r\n        case 7:\r\n          item.color = 'rgb(177, 0, 0)';\r\n          break;\r\n        case 8:\r\n          item.color = 'rgb(0, 0, 0)';\r\n          break;\r\n      }\r\n      setFieldSquers(allNumberColors);\r\n    });\r\n  };\r\n\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-xs-offset-3 col-xs-6\">\r\n            <button type=\"button\" onClick={() => start()}>Start</button>\r\n            <button type=\"button\" onClick={() => putNumberColor()}>Test</button>\r\n            <h2>{mesage}</h2>\r\n            <h2>{bombCount}</h2>\r\n            <div className=\"game--grid\">\r\n              {fieldSquers.map((item) =>\r\n\r\n                <div key={item.id}>\r\n                  <Squer\r\n                    x={item.x}\r\n                    y={item.y}\r\n                    id={item.id}\r\n                    openHandler={(x, y) =>\r\n                      openHandler(item.x, item.y)}\r\n                    open={item.open}\r\n                    bomb={item.bomb}\r\n                    bombNumber={item.bombNumber}\r\n                    numberColor={item.color}\r\n\r\n                  />\r\n                </div>)}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"squer\":\"field_squer__362V1\",\"squerOpen\":\"field_squerOpen__2t6UD\",\"squerBomb\":\"field_squerBomb__1EsGs\"};"],"sourceRoot":""}